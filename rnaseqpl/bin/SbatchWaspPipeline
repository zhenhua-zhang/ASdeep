#!/bin/bash
#
## A pipeline of Allele-specific expression analysi by Fastp, STAR, WASP and SAMtools
#

set -o errexit
set -o errtrace

export SCRIPT_VERSOIN="0.1.0"
export SCRIPT_PATH="$(dirname $(readlink -f $0))"

ERRO() {
    echo -e "[E]: $1" >&2 && exit -1
}

WARN() {
    echo -e "[W]: $1" >&2
}

INFO() {
    echo -e "[I]: $1"
}

echo_version() {
    cat << EOF

$(basename $0), Version ${SCRIPT_VERSOIN:=UNKNOWN}

EOF
}

echo_help() {
    cat <<EOF
$(basename $0), Version ${SCRIPT_VERSOIN:=UNKNOWN}

Help:
  -h|--help    Optional. Action: print_info
    Print this help context and exit.
  -V|--version    Optional. Action: store_true
    Print version of current script and exit.

More information please contact Zhenhua Zhang <zhenhua.zhang217@gmail.com>

EOF
}


opt=$(getopt -l "workDir:,fastqId:,fastqDir:,genomeDir:,genomeFastaFile:,genomeAnnotationsFile:,help,version" -- "w:i:p:g:f:a:v:" $@)
eval set -- $opt
while true; do
    case $1 in
        -w|--workDir) shift && workDir=$1 ;;

        -i|--fastqId) shift && fastqId=$1 ;;
        -p|--fastqDir) shift && fastqDir=$1 ;;

        -g|--genomeDir) shift && genomeDir=$1 ;;
        --genomeFastaFile) shift && genomeFastaFile=$1;;
        --genomeAnnotationsFile) shift && genomeAnnotationsFile=$1 ;;

        --snp2h5Exe) shift && snp2h5Exe=$1 ;;
        --snph5db) shift && snph5db=$1 ;;
        --chromInfoFile) shift && chromInfoFile=$1 ;;
        --vcfFile) shift && vcfFile=$1 ;;

        --virtualEnv) shift && virtualEnv=$1 ;;
        --waspPath) shift && waspPath=$1 ;;
        --sampleIdFile) shift && sampleIdFile=$1 ;;

        --help) echo_help && exit 0 ;;
        --version) echo_version && exit 0 ;;
        --) shift && break ;;
    esac
    shift
done

# Setup working directories for current project
" How the working tree looks like
WORKDIR/
├── [genomedir/]
├── [snph5db/]
├── optdir/
│   └── FASTQID/
│       ├── fastpReports/
│       ├── misc/
│       └── starBAMs/
└── tmpdir
    └── FASTQID
        ├── fastpTmpdir/
        ├── starTmpdir/
        └── waspTmpdir/
            ├── perChrom/
            └── starMapping/
"

workDir=${workDir:?-w/--workDir is required}
fastqId=${fastqId:?-s/--fastqId is required}  # ${fastqId}_R1.fq.gz & ${fastqId}_R2.fq.gz
fastqDir=${fastqDir:?-p/--fastqDir is required}

if [ $genomeDir"xxx" == "xxx" ]; then
    if [ $genomeFastaFile"xxx" == "xxx" ]; then
        ERRO "Either -g/--genomeDir or -f/--genomeFastaFile should be given!"
    fi

    # Setup the path of STAR genome index
    genomeDir=${genomeDir:=$workDir/genomedir}
else
    if [ $genomeFastaFile"xxx" != "xxx" ]; then
        ERRO "Either -g/--genomeDir or -f/--genomeFastaFile should be given, but not both!"
    fi
fi

if [ -d $workDir/tmpdir/$fastqId -o -d $workDir/optdir/$fastqId ]; then
    ERRO "It looks you have worked on $fastqId"
fi

mkdir -p $workDir/tmpdir/$fastqId/{fastp,star,wasp}Tmpdir
mkdir -p $workDir/optdir/$fastqId/{fastp,star,wasp}Optdir

# Preprocessing fastq files. Current only for paired-end FASTQs. It can only use up to 16 CPUs.
FastpPreproc=$(sbatch --time=0:30:00 --cpus=16 --mem=5G \
    --output=%j-%u-$fastqId-FastpPreprocessing.log \
    --job-name=FastpPreprocessing \
    ../scripts/FastpPreprocessing.sh \
    -w $workDir \
    -i $fastqId \
    -q $fastqDir \
    | cut -d' ' -f4
)

# Create STAR genome index. It requires at least 120G memory.
# The index was made on human genome build 37, using transcript annotations (V75) downloaded from
# Ensembl. The genome index should be constructed with annotations.
if [ ! -d $genomeDir ]; then
    if [ $genomeFastaFile"xxx" == "xxx" ]; then
        ERRO "No genome index found, please specify genome fasta file to create the genome index"
    fi

    if [ $genomeAnnotationsFile"xxx" == "xxx" ]; then
        ERRO "No genome index found, please specify genome annotation file to create the genome index"
    fi

    mkdir -p $workDir/genomedir
    STARGenomeIndex=$(sbatch --time=1:59:50 --cpus=10 --mem=130G \
        --output=%j-%u-$fastqId-STARBuildGenomeIndex.log \
        --job-name=StarBuildGenomeIndex \
        ../scripts/STARBuildGenomeIndex.sh \
        -w $workDir \
        -g $genomeDir \
        -f $genomeFastaFile \
        -a $genomeAnnotationsFile \
        | cut -d' ' -f4
    )
    dependency=$FastpPreproc:$STARGenomeIndex
else
    dependency=$FastpPreproc
    INFO "Found $genomeDir, supposing it as a legal STAR genome index, skip STARGenomeIndex.sh"
fi

# For human genome, it requires at least 40G memory.
STARMapping=$(sbatch --dependency=afterok:$dependency \
    --time=0:29:00 --cpus=20 --mem=50G \
    --output=%j-%u-$fastqId-STARMapping.log \
    --job-name=STARMapping \
    ../scripts/STARMapping.sh \
    -w $workDir \
    -g $genomedir \
    -i $fastqId \
    -p $workDir/tmpdir/$fastqId/starTmpdir/ \
    -o $workdir/tmpdir/$fastqId/starTmpdir/$fastqId \
    --fq1Pattern *R1.fq.gz \
    --fq2Pattern *R2.fq.gz \
    | cut -d' ' -f4
)

if [ $snph5db"xxx" == "xxx" -a -d $snph5db ]; then
    dependency=$STARMapping
else
    WaspCreateSnpHdf5Database=$(sbatch \
        --time=2:0:0 --mem=10G --cpus=1 \
        --output=%j-%u-$fastqId-WaspCreateSnpHdf5Database.log \
        --job-name=WaspCreateSnpHdf5Database \
        ../scripts/WaspCreateSnpHdf5Database.sh \
        -w $workDir \
        -v $vcfFile \
        -c $chromInfoFile \
        -e $snp2h5Exe \
        | cut -d' ' -f4
    )
    dependency=$STARMapping:$WaspCreateSnpHdf5Database
fi

WaspFindIntersectSnps=$(sbatch --dependency=afterok:$dependency \
    --time=0:20:0 --mem=8G --cpus=1 --ntasks=1 --array=1-22 \
    --output=%A_%a-%u-$fastqId-WaspFindIntersectSnps.log \
    --job-name=WaspFindIntersectSnps \
    ../scripts/WaspFindIntersectSnps.sh \
    -w $workDir \
    -i $fastqId \
    -d $snph5db \
    -W $waspPath \
    -v $virtualEnv \
    -s $sampleIdFile
    | cut -d' ' -f4
)

dependency=$WaspFindIntersectSnps
WaspRemapping=$(sbatch --dependency=afterok:$dependency \
    --time=0:10:0 --mem=40G --cpus=15 \
    --output=%j-%u-$fastqId-WaspRemapping.log \
    --job-name=WaspRemapping \
    ../scripts/STARMapping.sh \
    -w $workDir \
    -g $genomedir \
    -i $fastqId \
    -p $workDir/tmpdir/$fastqId/waspTmpdir/perChromDir \
    -o $workdir/tmpdir/$fastqId/waspTmpdir/starMapping/$fastqId \
    --fq1Pattern */*fq1.gz \
    --fq2Pattern */*fq2.gz \
    | cut -d' ' -f4
) 

dependency=$WaspRemapping
WaspSplitAndConquer=$(sbatch --dependency=afterok:$dependency \
    --time=0:10:0 --mem=10G --cpus=1 --ntasks=1 --array=1-22 \
    --output=%A_%a-$fastqId-WaspSplitAndConquer.log \
    --job-name=WaspSplitAndConquer \
    ../scripts/WaspSplitAndConquer.sh \
    -w $workDir \
    -i $fastqId \
    -d $snph5db \
    -s $sampleIdFile \
    -W $waspPath \
    -v $virtualEnv
    | cut -d' ' -f4
)

# Collect output and clean up
sbatch --dependency=afterok:$dependency \
    --time=0:10:0 --mem=5G --cpus=10 --ntasks=1 \
    --output=%j-%u-$fastqId-CollectOutputAndCleanup.log \
    --job-name=CollectOutputAndCleanup \
    ../scripts/CollectOutputAndCleanup.sh \
    -w $workDir \
    -i $fastqId \
    | cut -d' ' -f4
